// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportschoolPrototype.Data;

#nullable disable

namespace SportschoolPrototype.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220912132019_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SportschoolPrototype.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("int");

                    b.Property<int?>("coachId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("coachId");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("SportschoolPrototype.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseID");

                    b.ToTable("Member", (string)null);
                });

            modelBuilder.Entity("SportschoolPrototype.Models.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeOfStaff")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Staff", (string)null);
                });

            modelBuilder.Entity("SportschoolPrototype.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("courseID")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("duration")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("weeklyUses")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Subscription", (string)null);
                });

            modelBuilder.Entity("SportschoolPrototype.Models.Course", b =>
                {
                    b.HasOne("SportschoolPrototype.Models.Subscription", null)
                        .WithMany("courses")
                        .HasForeignKey("SubscriptionId");

                    b.HasOne("SportschoolPrototype.Models.Personel", "coach")
                        .WithMany()
                        .HasForeignKey("coachId");

                    b.Navigation("coach");
                });

            modelBuilder.Entity("SportschoolPrototype.Models.Member", b =>
                {
                    b.HasOne("SportschoolPrototype.Models.Course", null)
                        .WithMany("members")
                        .HasForeignKey("CourseID");
                });

            modelBuilder.Entity("SportschoolPrototype.Models.Subscription", b =>
                {
                    b.HasOne("SportschoolPrototype.Models.Member", null)
                        .WithMany("subscriptions")
                        .HasForeignKey("MemberId");
                });

            modelBuilder.Entity("SportschoolPrototype.Models.Course", b =>
                {
                    b.Navigation("members");
                });

            modelBuilder.Entity("SportschoolPrototype.Models.Member", b =>
                {
                    b.Navigation("subscriptions");
                });

            modelBuilder.Entity("SportschoolPrototype.Models.Subscription", b =>
                {
                    b.Navigation("courses");
                });
#pragma warning restore 612, 618
        }
    }
}
